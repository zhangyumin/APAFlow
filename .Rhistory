)
)
print(tabItem(tabName = "parse_gff",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
fileInput("parse_gff_file", "Input file here", multiple = FALSE, accept = NULL, width = NULL),
numericInput("add3utr", "add3utr", 0),
numericInput("expand3utr", "expand3utr", 0),
numericInput("pm", "pm", 0),
actionButton("submit","submit")
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results",
htmlOutput("text"),
htmlOutput("td")
)
)
),
tabItem(tabName = "sam2pat",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
selectInput("Poly type", "poly", c("A" = "A","T" = "T")),
numericInput("m", "m", 0),
numericInput("s", "s", 0)
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results"
)
)
))
print(tabItem(tabName = "parse_gff",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
fileInput("parse_gff_file", "Input file here", multiple = FALSE, accept = NULL, width = NULL),
numericInput("add3utr", "add3utr", 0),
numericInput("expand3utr", "expand3utr", 0),
numericInput("pm", "pm", 0),
actionButton("submit","submit")
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results",
htmlOutput("text"),
htmlOutput("td")
)
)
),
tabItem(tabName = "sam2pat",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
selectInput("Poly type", "poly", c("A" = "A","T" = "T")),
numericInput("m", "m", 0),
numericInput("s", "s", 0)
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results"
)
)
))
a <- list(tabItem(tabName = "parse_gff",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
fileInput("parse_gff_file", "Input file here", multiple = FALSE, accept = NULL, width = NULL),
numericInput("add3utr", "add3utr", 0),
numericInput("expand3utr", "expand3utr", 0),
numericInput("pm", "pm", 0),
actionButton("submit","submit")
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results",
htmlOutput("text"),
htmlOutput("td")
)
)
),
tabItem(tabName = "sam2pat",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
selectInput("Poly type", "poly", c("A" = "A","T" = "T")),
numericInput("m", "m", 0),
numericInput("s", "s", 0)
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results"
)
)
))
a
tabItems(a)
tabItems(
# 第一部分：预处理
tabItem(tabName = "parse_gff",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
fileInput("parse_gff_file", "Input file here", multiple = FALSE, accept = NULL, width = NULL),
numericInput("add3utr", "add3utr", 0),
numericInput("expand3utr", "expand3utr", 0),
numericInput("pm", "pm", 0),
actionButton("submit","submit")
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results",
htmlOutput("text"),
htmlOutput("td")
)
)
),
tabItem(tabName = "sam2pat",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
selectInput("Poly type", "poly", c("A" = "A","T" = "T")),
numericInput("m", "m", 0),
numericInput("s", "s", 0)
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results"
)
)
))
packageVersion("shinydashboard")
runApp()
runApp()
packageVersion("shinydashboard")
sidebarMenu(menuItem('预处理', tabName = 'preprocessing', icon = icon('random'),
menuSubItem('GFF格式化', tabName = 'parse_gff'),
menuSubItem('SAM文件转换为PA坐标', tabName = 'sam2pat'),
menuSubItem('去除internal priming', tabName = 'remove_ip'),
menuSubItem('聚类PAT', tabName = 'pat2pac'),
menuSubItem('统计PAC', tabName = 'stat_pac'),
menuSubItem('过滤', tabName = 'filter_pac'),
menuSubItem('标准化', tabName = 'normalize_pac'),
menuSubItem('PAC诊断', tabName = 'diagnose_pac')
))
sidebarMenu(menuItem('预处理', tabName = 'preprocessing', icon = icon('random'),
menuSubItem('GFF格式化', tabName = 'parse_gff'),
menuSubItem('SAM文件转换为PA坐标', tabName = 'sam2pat'),
menuSubItem('去除internal priming', tabName = 'remove_ip'),
menuSubItem('聚类PAT', tabName = 'pat2pac'),
menuSubItem('统计PAC', tabName = 'stat_pac'),
menuSubItem('过滤', tabName = 'filter_pac'),
menuSubItem('标准化', tabName = 'normalize_pac'),
menuSubItem('PAC诊断', tabName = 'diagnose_pac')
),
menuItem('PAS分析', tabName = 'pas_analysis', icon = icon('line-chart'),
menuSubItem('提取序列', tabName = 'trim_seq'),
menuSubItem('单核苷分布', tabName = 'single_nucleotide'),
menuSubItem('联子分析', tabName = 'kcount'),
menuSubItem('信号分析', tabName = 'signal_analysis')
))
test <- list(menuItem('预处理', tabName = 'preprocessing', icon = icon('random'),
menuSubItem('GFF格式化', tabName = 'parse_gff'),
menuSubItem('SAM文件转换为PA坐标', tabName = 'sam2pat'),
menuSubItem('去除internal priming', tabName = 'remove_ip'),
menuSubItem('聚类PAT', tabName = 'pat2pac'),
menuSubItem('统计PAC', tabName = 'stat_pac'),
menuSubItem('过滤', tabName = 'filter_pac'),
menuSubItem('标准化', tabName = 'normalize_pac'),
menuSubItem('PAC诊断', tabName = 'diagnose_pac')
),
menuItem('PAS分析', tabName = 'pas_analysis', icon = icon('line-chart'),
menuSubItem('提取序列', tabName = 'trim_seq'),
menuSubItem('单核苷分布', tabName = 'single_nucleotide'),
menuSubItem('联子分析', tabName = 'kcount'),
menuSubItem('信号分析', tabName = 'signal_analysis')
)
print(test)
print(test)
test <- list(menuItem('预处理', tabName = 'preprocessing', icon = icon('random'),
menuSubItem('GFF格式化', tabName = 'parse_gff'),
menuSubItem('SAM文件转换为PA坐标', tabName = 'sam2pat'),
menuSubItem('去除internal priming', tabName = 'remove_ip'),
menuSubItem('聚类PAT', tabName = 'pat2pac'),
menuSubItem('统计PAC', tabName = 'stat_pac'),
menuSubItem('过滤', tabName = 'filter_pac'),
menuSubItem('标准化', tabName = 'normalize_pac'),
menuSubItem('PAC诊断', tabName = 'diagnose_pac')
),
menuItem('PAS分析', tabName = 'pas_analysis', icon = icon('line-chart'),
menuSubItem('提取序列', tabName = 'trim_seq'),
menuSubItem('单核苷分布', tabName = 'single_nucleotide'),
menuSubItem('联子分析', tabName = 'kcount'),
menuSubItem('信号分析', tabName = 'signal_analysis')
))
print(test)
sidebarMenu(test)
print(test)
test <- list(fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
fileInput("parse_gff_file", "Input file here", multiple = FALSE, accept = NULL, width = NULL),
numericInput("add3utr", "add3utr", 0),
numericInput("expand3utr", "expand3utr", 0),
numericInput("pm", "pm", 0),
actionButton("submit","submit")
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results",
htmlOutput("text"),
htmlOutput("td")
)
)
))
test <- list(fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
fileInput("parse_gff_file", "Input file here", multiple = FALSE, accept = NULL, width = NULL),
numericInput("add3utr", "add3utr", 0),
numericInput("expand3utr", "expand3utr", 0),
numericInput("pm", "pm", 0),
actionButton("submit","submit")
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results",
htmlOutput("text"),
htmlOutput("td")
)
)
)
print(test)
test <- list(tabItem(tabName = "parse_gff",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
fileInput("parse_gff_file", "Input file here", multiple = FALSE, accept = NULL, width = NULL),
numericInput("add3utr", "add3utr", 0),
numericInput("expand3utr", "expand3utr", 0),
numericInput("pm", "pm", 0),
actionButton("submit","submit")
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results",
htmlOutput("text"),
htmlOutput("td")
)
)
))
print(test)
tabItems(test)
test <- tabItem(tabName = "parse_gff",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
fileInput("parse_gff_file", "Input file here", multiple = FALSE, accept = NULL, width = NULL),
numericInput("add3utr", "add3utr", 0),
numericInput("expand3utr", "expand3utr", 0),
numericInput("pm", "pm", 0),
actionButton("submit","submit")
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results",
htmlOutput("text"),
htmlOutput("td")
)
)
)
print(test)
tabItems(test)
test <- tabItem(tabName = "parse_gff",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
fileInput("parse_gff_file", "Input file here", multiple = FALSE, accept = NULL, width = NULL),
numericInput("add3utr", "add3utr", 0),
numericInput("expand3utr", "expand3utr", 0),
numericInput("pm", "pm", 0),
actionButton("submit","submit")
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results",
htmlOutput("text"),
htmlOutput("td")
)
)
),
tabItem(tabName = "sam2pat",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
selectInput("Poly type", "poly", c("A" = "A","T" = "T")),
numericInput("m", "m", 0),
numericInput("s", "s", 0)
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results"
)
)
)
tabItems(test)
test1 <- tabItem(tabName = "parse_gff",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
fileInput("parse_gff_file", "Input file here", multiple = FALSE, accept = NULL, width = NULL),
numericInput("add3utr", "add3utr", 0),
numericInput("expand3utr", "expand3utr", 0),
numericInput("pm", "pm", 0),
actionButton("submit","submit")
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results",
htmlOutput("text"),
htmlOutput("td")
)
)
)
test2 <- tabItem(tabName = "sam2pat",
fluidRow(
box(
width = 4, status = "info", solidHeader = TRUE,
title = "Options",
selectInput("Poly type", "poly", c("A" = "A","T" = "T")),
numericInput("m", "m", 0),
numericInput("s", "s", 0)
),
box(
width = 8, status = "info", solidHeader = TRUE,
title = "Results"
)
)
)
test1+ test2
paste0(test1, test2)
tabItems(test1)
tabItems(test2)
tabItems(test)
test = paste0(test1, test2)
tabItems(test)
test = paste0(test1,",", test2)
tabItems(test)
print(test1)
print(test2)
tabItem(test1)
tabItems(test1)
runApp()
runApp()
runApp()
runApp()
runApp()
test1
test2
test = paste0(test1, test2)
test
tabItems(test)
tabItems(test1)
tabItems(test1+test2)
tabItems(test1,test2)
runApp()
runApp()
runApp()
test1
class(test1)
runApp()
runApp()
item_detail_list
class(item_detail_list)
class(item_detail_list[1])
item_detail_list[1]
item_detail_list[1]
class(item_detail_list[1])
class(item_detail_list[2])
class(item_detail_list[[1]])
item_detail_list[[1]]
item_detail_list
runApp()
runApp()
item_detail_list
menu_list
menu_list[1]
class(menu_list[1])
class(menu_list[[1])
class(menu_list[[1]])
runApp()
test1
class(test1)
class(test2)
runApp()
runApp()
runApp()
runApp()
runApp()
body
class(body)
class(sidebar)
class(menulist)
class(menu_list)
runApp()
runApp()
class(test1)
class(test2)
class(test)
test <- merge(test1, test2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(R.utils)
library(utils)
sourceDirectory
sourceDirectory()
sourceDirectory
sourceDirectory()
runApp()
lapply(list.files("script/mathops.r", pattern = "[.][rR]$", recursive = TRUE), source)
mathops()
list.files("script/mathops.r")
list.files("D:/APAFlow/script/mathops.r")
list.files("D:/APAFlow/script/")
list.files("./script/")
list.files("script/")
lapply(list.files("script/", pattern = "[.][rR]$", recursive = TRUE), source)
lapply(list.files("script/", pattern = "[.][rR]$", recursive = TRUE, full.names = TRUE), source)
mathops()
runApp()
runApp()
mathops()
lapply(list.files("script/", pattern = "[.][rR]$", recursive = TRUE, full.names = TRUE), source)
mathops()
runApp()
runApp()
runApp()
runApp()
runApp()
print select_choice
select_choice
runApp()
runApp()
runApp()
runApp()
library("shinydashboard", lib.loc="D:/R-3.2.1/library")
detach("package:shinydashboard", unload=TRUE)
runApp()
runApp()
runApp()
read.table()
read.table("data.txt")
data = read.table("data.txt")
print data
data
data[1]
data[2]
data[[1]]
data[[2]]
data
file_data = read.table(upload_file, header = FALSE)
data = read.table("data.txt", header = FALSE)
data = read.table("data.txt")
data
data[v1]
data[0,1]
data[0,2]
data[1,2]
data[1,1]
data[2,1]
write.table(3, file = "data.txt", append = TRUE)
write.table(3, file = "data.txt", append = TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)
write.table(3, file = "data.txt", append = TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)
write.table(3, file = "data.txt", append = TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)
write.table(3, file = "data.txt", append = TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
